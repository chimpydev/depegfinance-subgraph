// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EpochCreated extends ethereum.Event {
  get params(): EpochCreated__Params {
    return new EpochCreated__Params(this);
  }
}

export class EpochCreated__Params {
  _event: EpochCreated;

  constructor(event: EpochCreated) {
    this._event = event;
  }

  get marketEpochId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get mIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get startEpoch(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get endEpoch(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get hedge(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get risk(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[7].value.toString();
  }

  get strikePrice(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get withdrawalFee(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class MarketCreated extends ethereum.Event {
  get params(): MarketCreated__Params {
    return new MarketCreated__Params(this);
  }
}

export class MarketCreated__Params {
  _event: MarketCreated;

  constructor(event: MarketCreated) {
    this._event = event;
  }

  get mIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get hedge(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get risk(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[4].value.toString();
  }

  get strikePrice(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class changedController extends ethereum.Event {
  get params(): changedController__Params {
    return new changedController__Params(this);
  }
}

export class changedController__Params {
  _event: changedController;

  constructor(event: changedController) {
    this._event = event;
  }

  get _marketIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get controller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class changedOracle extends ethereum.Event {
  get params(): changedOracle__Params {
    return new changedOracle__Params(this);
  }
}

export class changedOracle__Params {
  _event: changedOracle;

  constructor(event: changedOracle) {
    this._event = event;
  }

  get _token(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _oracle(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class changedTimeWindow extends ethereum.Event {
  get params(): changedTimeWindow__Params {
    return new changedTimeWindow__Params(this);
  }
}

export class changedTimeWindow__Params {
  _event: changedTimeWindow;

  constructor(event: changedTimeWindow) {
    this._event = event;
  }

  get _marketIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _timeWindow(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class changedTreasury extends ethereum.Event {
  get params(): changedTreasury__Params {
    return new changedTreasury__Params(this);
  }
}

export class changedTreasury__Params {
  _event: changedTreasury;

  constructor(event: changedTreasury) {
    this._event = event;
  }

  get _treasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _marketIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class changedVaultFee extends ethereum.Event {
  get params(): changedVaultFee__Params {
    return new changedVaultFee__Params(this);
  }
}

export class changedVaultFee__Params {
  _event: changedVaultFee;

  constructor(event: changedVaultFee) {
    this._event = event;
  }

  get _marketIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _feeRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class controllerSet extends ethereum.Event {
  get params(): controllerSet__Params {
    return new controllerSet__Params(this);
  }
}

export class controllerSet__Params {
  _event: controllerSet;

  constructor(event: controllerSet) {
    this._event = event;
  }

  get newController(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VaultFactory__createNewMarketResult {
  value0: Address;
  value1: Address;

  constructor(value0: Address, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getInsr(): Address {
    return this.value0;
  }

  getRsk(): Address {
    return this.value1;
  }
}

export class VaultFactory extends ethereum.SmartContract {
  static bind(address: Address): VaultFactory {
    return new VaultFactory("VaultFactory", address);
  }

  WETH(): Address {
    let result = super.call("WETH", "WETH():(address)", []);

    return result[0].toAddress();
  }

  try_WETH(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH", "WETH():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  controller(): Address {
    let result = super.call("controller", "controller():(address)", []);

    return result[0].toAddress();
  }

  try_controller(): ethereum.CallResult<Address> {
    let result = super.tryCall("controller", "controller():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createNewMarket(
    _withdrawalFee: BigInt,
    _token: Address,
    _strikePrice: BigInt,
    epochBegin: BigInt,
    epochEnd: BigInt,
    _oracle: Address,
    _name: string
  ): VaultFactory__createNewMarketResult {
    let result = super.call(
      "createNewMarket",
      "createNewMarket(uint256,address,int256,uint256,uint256,address,string):(address,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_withdrawalFee),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromSignedBigInt(_strikePrice),
        ethereum.Value.fromUnsignedBigInt(epochBegin),
        ethereum.Value.fromUnsignedBigInt(epochEnd),
        ethereum.Value.fromAddress(_oracle),
        ethereum.Value.fromString(_name)
      ]
    );

    return new VaultFactory__createNewMarketResult(
      result[0].toAddress(),
      result[1].toAddress()
    );
  }

  try_createNewMarket(
    _withdrawalFee: BigInt,
    _token: Address,
    _strikePrice: BigInt,
    epochBegin: BigInt,
    epochEnd: BigInt,
    _oracle: Address,
    _name: string
  ): ethereum.CallResult<VaultFactory__createNewMarketResult> {
    let result = super.tryCall(
      "createNewMarket",
      "createNewMarket(uint256,address,int256,uint256,uint256,address,string):(address,address)",
      [
        ethereum.Value.fromUnsignedBigInt(_withdrawalFee),
        ethereum.Value.fromAddress(_token),
        ethereum.Value.fromSignedBigInt(_strikePrice),
        ethereum.Value.fromUnsignedBigInt(epochBegin),
        ethereum.Value.fromUnsignedBigInt(epochEnd),
        ethereum.Value.fromAddress(_oracle),
        ethereum.Value.fromString(_name)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new VaultFactory__createNewMarketResult(
        value[0].toAddress(),
        value[1].toAddress()
      )
    );
  }

  getVaults(index: BigInt): Array<Address> {
    let result = super.call("getVaults", "getVaults(uint256):(address[])", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);

    return result[0].toAddressArray();
  }

  try_getVaults(index: BigInt): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall("getVaults", "getVaults(uint256):(address[])", [
      ethereum.Value.fromUnsignedBigInt(index)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  indexEpochs(param0: BigInt, param1: BigInt): BigInt {
    let result = super.call(
      "indexEpochs",
      "indexEpochs(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_indexEpochs(param0: BigInt, param1: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "indexEpochs",
      "indexEpochs(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  indexVaults(param0: BigInt, param1: BigInt): Address {
    let result = super.call(
      "indexVaults",
      "indexVaults(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toAddress();
  }

  try_indexVaults(
    param0: BigInt,
    param1: BigInt
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "indexVaults",
      "indexVaults(uint256,uint256):(address)",
      [
        ethereum.Value.fromUnsignedBigInt(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  lastLocked(): BigInt {
    let result = super.call("lastLocked", "lastLocked():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastLocked(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastLocked", "lastLocked():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  marketIndex(): BigInt {
    let result = super.call("marketIndex", "marketIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_marketIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("marketIndex", "marketIndex():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  timeLock(): BigInt {
    let result = super.call("timeLock", "timeLock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_timeLock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("timeLock", "timeLock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenToOracle(param0: Address): Address {
    let result = super.call(
      "tokenToOracle",
      "tokenToOracle(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toAddress();
  }

  try_tokenToOracle(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "tokenToOracle",
      "tokenToOracle(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _weth(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChangeControllerCall extends ethereum.Call {
  get inputs(): ChangeControllerCall__Inputs {
    return new ChangeControllerCall__Inputs(this);
  }

  get outputs(): ChangeControllerCall__Outputs {
    return new ChangeControllerCall__Outputs(this);
  }
}

export class ChangeControllerCall__Inputs {
  _call: ChangeControllerCall;

  constructor(call: ChangeControllerCall) {
    this._call = call;
  }

  get _marketIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _controller(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeControllerCall__Outputs {
  _call: ChangeControllerCall;

  constructor(call: ChangeControllerCall) {
    this._call = call;
  }
}

export class ChangeOracleCall extends ethereum.Call {
  get inputs(): ChangeOracleCall__Inputs {
    return new ChangeOracleCall__Inputs(this);
  }

  get outputs(): ChangeOracleCall__Outputs {
    return new ChangeOracleCall__Outputs(this);
  }
}

export class ChangeOracleCall__Inputs {
  _call: ChangeOracleCall;

  constructor(call: ChangeOracleCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _oracle(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ChangeOracleCall__Outputs {
  _call: ChangeOracleCall;

  constructor(call: ChangeOracleCall) {
    this._call = call;
  }
}

export class ChangeTimewindowCall extends ethereum.Call {
  get inputs(): ChangeTimewindowCall__Inputs {
    return new ChangeTimewindowCall__Inputs(this);
  }

  get outputs(): ChangeTimewindowCall__Outputs {
    return new ChangeTimewindowCall__Outputs(this);
  }
}

export class ChangeTimewindowCall__Inputs {
  _call: ChangeTimewindowCall;

  constructor(call: ChangeTimewindowCall) {
    this._call = call;
  }

  get _marketIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _timewindow(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeTimewindowCall__Outputs {
  _call: ChangeTimewindowCall;

  constructor(call: ChangeTimewindowCall) {
    this._call = call;
  }
}

export class ChangeTreasuryCall extends ethereum.Call {
  get inputs(): ChangeTreasuryCall__Inputs {
    return new ChangeTreasuryCall__Inputs(this);
  }

  get outputs(): ChangeTreasuryCall__Outputs {
    return new ChangeTreasuryCall__Outputs(this);
  }
}

export class ChangeTreasuryCall__Inputs {
  _call: ChangeTreasuryCall;

  constructor(call: ChangeTreasuryCall) {
    this._call = call;
  }

  get _treasury(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _marketIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ChangeTreasuryCall__Outputs {
  _call: ChangeTreasuryCall;

  constructor(call: ChangeTreasuryCall) {
    this._call = call;
  }
}

export class CreateNewMarketCall extends ethereum.Call {
  get inputs(): CreateNewMarketCall__Inputs {
    return new CreateNewMarketCall__Inputs(this);
  }

  get outputs(): CreateNewMarketCall__Outputs {
    return new CreateNewMarketCall__Outputs(this);
  }
}

export class CreateNewMarketCall__Inputs {
  _call: CreateNewMarketCall;

  constructor(call: CreateNewMarketCall) {
    this._call = call;
  }

  get _withdrawalFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _strikePrice(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get epochBegin(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get epochEnd(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _oracle(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class CreateNewMarketCall__Outputs {
  _call: CreateNewMarketCall;

  constructor(call: CreateNewMarketCall) {
    this._call = call;
  }

  get insr(): Address {
    return this._call.outputValues[0].value.toAddress();
  }

  get rsk(): Address {
    return this._call.outputValues[1].value.toAddress();
  }
}

export class DeployMoreAssetsCall extends ethereum.Call {
  get inputs(): DeployMoreAssetsCall__Inputs {
    return new DeployMoreAssetsCall__Inputs(this);
  }

  get outputs(): DeployMoreAssetsCall__Outputs {
    return new DeployMoreAssetsCall__Outputs(this);
  }
}

export class DeployMoreAssetsCall__Inputs {
  _call: DeployMoreAssetsCall;

  constructor(call: DeployMoreAssetsCall) {
    this._call = call;
  }

  get index(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get epochBegin(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get epochEnd(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _withdrawalFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DeployMoreAssetsCall__Outputs {
  _call: DeployMoreAssetsCall;

  constructor(call: DeployMoreAssetsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetControllerCall extends ethereum.Call {
  get inputs(): SetControllerCall__Inputs {
    return new SetControllerCall__Inputs(this);
  }

  get outputs(): SetControllerCall__Outputs {
    return new SetControllerCall__Outputs(this);
  }
}

export class SetControllerCall__Inputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }

  get _controller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetControllerCall__Outputs {
  _call: SetControllerCall;

  constructor(call: SetControllerCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
